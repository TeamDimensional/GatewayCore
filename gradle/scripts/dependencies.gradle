apply from: 'gradle/scripts/helpers.gradle'

def debug_roots = false
def debug_tinker = true

final def mod_dependencies = [
        'jei-238222:5101347': [true],
        'mystical_lib-277064:3483816': [debug_roots],
        'mystical_world-282940:3460961': [debug_roots],
        'patchouli-306770:3162874': [debug_roots],
        'roots-246183:3905074': [debug_roots],
        'mantle-74924:2713386': [debug_tinker],
        'tinkers-construct-74072:2902483': [debug_tinker],
]

final def runtime_dependencies = [
        'hwyla-253449:2568751': [true],
        'tinkers-jei-291786:2701203': [debug_tinker],
]

repositories {
    // Other repositories described by default:
    // CleanroomMC: https://maven.cleanroommc.com
    exclusiveContent {
        forRepository {
            maven {
                name 'CurseMaven'
                url 'https://cursemaven.com'
            }
        }
        filter {
            includeGroup 'curse.maven'
        }
    }
    exclusiveContent {
        forRepository {
            maven {
                name 'Modrinth'
                url 'https://api.modrinth.com/maven'
            }
        }
        filter {
            includeGroup 'maven.modrinth'
        }
    }
    mavenLocal() // Must be last for caching to work
}

dependencies {
    // Example - Dependency descriptor:
    // 'com.google.code.gson:gson:2.8.6' << group: com.google.code.gson, name:gson, version:2.8.6
    // 'group:name:version:classifier' where classifier is optional

    // Example - Deobfuscating dependencies:
    // rfg.deobf('curse.maven:had-enough-items-557549:4543375')
    // By wrapping a dependency descriptor in rfg.deobf() method call, the dependency is queued for deobfuscation
    // When deobfuscating, RFG respects the mapping_channel + mapping_version stated in gradle.properties

    // Example - CurseMaven dependencies:
    // 'curse.maven:had-enough-items-557549:4543375' << had-enough-items = project slug, 557549 = project id, 4543375 = file id
    // Full documentation: https://cursemaven.com/

    // Example - Modrinth dependencies:
    // 'maven.modrinth:jei:4.16.1.1000' << jei = project name, 4.16.1.1000 = file version
    // Full documentation: https://docs.modrinth.com/docs/tutorials/maven/

    // Common dependency types (configuration):
    // implementation = dependency available at both compile time and runtime
    // runtimeOnly = runtime dependency
    // compileOnly = compile time dependency
    // annotationProcessor = annotation processing dependencies

    // Transitive dependencies:
    // (Dependencies that your dependency depends on)
    // If you wish to exclude transitive dependencies in the described dependencies
    // Use a closure as such:
    // implementation ('com.google.code.gson:gson:2.8.6') {
    //     transitive = false
    // }

    mod_dependencies.entrySet().forEach {
        def mod = rfg.deobf('curse.maven:' + it.key)
        compileOnly mod
        if (it.value.any { it.toBoolean() }) {
            runtimeOnly mod
        }
    }
    runtime_dependencies.entrySet().forEach {
        if (it.value.any { it.toBoolean() }) {
            def mod = rfg.deobf('curse.maven:' + it.key)
            runtimeOnly mod
        }
    }
}